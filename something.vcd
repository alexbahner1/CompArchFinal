$date
	Sun Dec  8 00:56:56 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpu_test $end
$var reg 1 ! clk0 $end
$var reg 1 " clk1 $end
$var reg 1024 # dump_fn [1023:0] $end
$var reg 1 $ init_data $end
$var reg 1024 % mem_text_fn [1023:0] $end
$var reg 1 & reset $end
$scope module calc_inst $end
$var wire 1 ! clk $end
$var wire 32 ' immA_32 [31:0] $end
$var wire 32 ( immB_32 [31:0] $end
$var wire 1 & reset $end
$var wire 1 ) storePrevControl $end
$var wire 1 * signControl $end
$var wire 32 + pc_up [31:0] $end
$var wire 32 , pc_curr [31:0] $end
$var wire 32 - instruction [31:0] $end
$var wire 14 . immB_14 [13:0] $end
$var wire 14 / immA_14 [13:0] $end
$var wire 3 0 funct_code [2:0] $end
$var wire 32 1 addsub_Bin [31:0] $end
$var wire 32 2 accum_out [31:0] $end
$var wire 32 3 accum_in [31:0] $end
$scope module CU $end
$var wire 1 ! clk $end
$var wire 3 4 funct [2:0] $end
$var reg 1 5 memControl $end
$var reg 1 * signControl $end
$var reg 1 ) storePrevControl $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk $end
$var wire 32 6 d [31:0] $end
$var wire 1 7 wrenable $end
$var reg 32 8 q [31:0] $end
$upscope $end
$scope module accumulator $end
$var wire 1 ! clk $end
$var wire 1 9 wrenable $end
$var wire 32 : d [31:0] $end
$var reg 32 ; q [31:0] $end
$upscope $end
$scope module add_sub $end
$var wire 32 < a [31:0] $end
$var wire 1 = overflow $end
$var wire 1 * subtract $end
$var wire 32 > sum [31:0] $end
$var wire 31 ? cout [30:0] $end
$var wire 1 @ carryout $end
$var wire 32 A bin [31:0] $end
$var wire 32 B b [31:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk2[1] $end
$scope module adder $end
$var wire 1 C a $end
$var wire 1 D andab $end
$var wire 1 E andcxor $end
$var wire 1 F b $end
$var wire 1 G carryin $end
$var wire 1 H carryout $end
$var wire 1 I sum $end
$var wire 1 J xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[2] $end
$scope module adder $end
$var wire 1 K a $end
$var wire 1 L andab $end
$var wire 1 M andcxor $end
$var wire 1 N b $end
$var wire 1 O carryin $end
$var wire 1 P carryout $end
$var wire 1 Q sum $end
$var wire 1 R xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[3] $end
$scope module adder $end
$var wire 1 S a $end
$var wire 1 T andab $end
$var wire 1 U andcxor $end
$var wire 1 V b $end
$var wire 1 W carryin $end
$var wire 1 X carryout $end
$var wire 1 Y sum $end
$var wire 1 Z xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[4] $end
$scope module adder $end
$var wire 1 [ a $end
$var wire 1 \ andab $end
$var wire 1 ] andcxor $end
$var wire 1 ^ b $end
$var wire 1 _ carryin $end
$var wire 1 ` carryout $end
$var wire 1 a sum $end
$var wire 1 b xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[5] $end
$scope module adder $end
$var wire 1 c a $end
$var wire 1 d andab $end
$var wire 1 e andcxor $end
$var wire 1 f b $end
$var wire 1 g carryin $end
$var wire 1 h carryout $end
$var wire 1 i sum $end
$var wire 1 j xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[6] $end
$scope module adder $end
$var wire 1 k a $end
$var wire 1 l andab $end
$var wire 1 m andcxor $end
$var wire 1 n b $end
$var wire 1 o carryin $end
$var wire 1 p carryout $end
$var wire 1 q sum $end
$var wire 1 r xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[7] $end
$scope module adder $end
$var wire 1 s a $end
$var wire 1 t andab $end
$var wire 1 u andcxor $end
$var wire 1 v b $end
$var wire 1 w carryin $end
$var wire 1 x carryout $end
$var wire 1 y sum $end
$var wire 1 z xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[8] $end
$scope module adder $end
$var wire 1 { a $end
$var wire 1 | andab $end
$var wire 1 } andcxor $end
$var wire 1 ~ b $end
$var wire 1 !" carryin $end
$var wire 1 "" carryout $end
$var wire 1 #" sum $end
$var wire 1 $" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[9] $end
$scope module adder $end
$var wire 1 %" a $end
$var wire 1 &" andab $end
$var wire 1 '" andcxor $end
$var wire 1 (" b $end
$var wire 1 )" carryin $end
$var wire 1 *" carryout $end
$var wire 1 +" sum $end
$var wire 1 ," xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[10] $end
$scope module adder $end
$var wire 1 -" a $end
$var wire 1 ." andab $end
$var wire 1 /" andcxor $end
$var wire 1 0" b $end
$var wire 1 1" carryin $end
$var wire 1 2" carryout $end
$var wire 1 3" sum $end
$var wire 1 4" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[11] $end
$scope module adder $end
$var wire 1 5" a $end
$var wire 1 6" andab $end
$var wire 1 7" andcxor $end
$var wire 1 8" b $end
$var wire 1 9" carryin $end
$var wire 1 :" carryout $end
$var wire 1 ;" sum $end
$var wire 1 <" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[12] $end
$scope module adder $end
$var wire 1 =" a $end
$var wire 1 >" andab $end
$var wire 1 ?" andcxor $end
$var wire 1 @" b $end
$var wire 1 A" carryin $end
$var wire 1 B" carryout $end
$var wire 1 C" sum $end
$var wire 1 D" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[13] $end
$scope module adder $end
$var wire 1 E" a $end
$var wire 1 F" andab $end
$var wire 1 G" andcxor $end
$var wire 1 H" b $end
$var wire 1 I" carryin $end
$var wire 1 J" carryout $end
$var wire 1 K" sum $end
$var wire 1 L" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[14] $end
$scope module adder $end
$var wire 1 M" a $end
$var wire 1 N" andab $end
$var wire 1 O" andcxor $end
$var wire 1 P" b $end
$var wire 1 Q" carryin $end
$var wire 1 R" carryout $end
$var wire 1 S" sum $end
$var wire 1 T" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[15] $end
$scope module adder $end
$var wire 1 U" a $end
$var wire 1 V" andab $end
$var wire 1 W" andcxor $end
$var wire 1 X" b $end
$var wire 1 Y" carryin $end
$var wire 1 Z" carryout $end
$var wire 1 [" sum $end
$var wire 1 \" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[16] $end
$scope module adder $end
$var wire 1 ]" a $end
$var wire 1 ^" andab $end
$var wire 1 _" andcxor $end
$var wire 1 `" b $end
$var wire 1 a" carryin $end
$var wire 1 b" carryout $end
$var wire 1 c" sum $end
$var wire 1 d" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[17] $end
$scope module adder $end
$var wire 1 e" a $end
$var wire 1 f" andab $end
$var wire 1 g" andcxor $end
$var wire 1 h" b $end
$var wire 1 i" carryin $end
$var wire 1 j" carryout $end
$var wire 1 k" sum $end
$var wire 1 l" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[18] $end
$scope module adder $end
$var wire 1 m" a $end
$var wire 1 n" andab $end
$var wire 1 o" andcxor $end
$var wire 1 p" b $end
$var wire 1 q" carryin $end
$var wire 1 r" carryout $end
$var wire 1 s" sum $end
$var wire 1 t" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[19] $end
$scope module adder $end
$var wire 1 u" a $end
$var wire 1 v" andab $end
$var wire 1 w" andcxor $end
$var wire 1 x" b $end
$var wire 1 y" carryin $end
$var wire 1 z" carryout $end
$var wire 1 {" sum $end
$var wire 1 |" xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[20] $end
$scope module adder $end
$var wire 1 }" a $end
$var wire 1 ~" andab $end
$var wire 1 !# andcxor $end
$var wire 1 "# b $end
$var wire 1 ## carryin $end
$var wire 1 $# carryout $end
$var wire 1 %# sum $end
$var wire 1 &# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[21] $end
$scope module adder $end
$var wire 1 '# a $end
$var wire 1 (# andab $end
$var wire 1 )# andcxor $end
$var wire 1 *# b $end
$var wire 1 +# carryin $end
$var wire 1 ,# carryout $end
$var wire 1 -# sum $end
$var wire 1 .# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[22] $end
$scope module adder $end
$var wire 1 /# a $end
$var wire 1 0# andab $end
$var wire 1 1# andcxor $end
$var wire 1 2# b $end
$var wire 1 3# carryin $end
$var wire 1 4# carryout $end
$var wire 1 5# sum $end
$var wire 1 6# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[23] $end
$scope module adder $end
$var wire 1 7# a $end
$var wire 1 8# andab $end
$var wire 1 9# andcxor $end
$var wire 1 :# b $end
$var wire 1 ;# carryin $end
$var wire 1 <# carryout $end
$var wire 1 =# sum $end
$var wire 1 ># xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[24] $end
$scope module adder $end
$var wire 1 ?# a $end
$var wire 1 @# andab $end
$var wire 1 A# andcxor $end
$var wire 1 B# b $end
$var wire 1 C# carryin $end
$var wire 1 D# carryout $end
$var wire 1 E# sum $end
$var wire 1 F# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[25] $end
$scope module adder $end
$var wire 1 G# a $end
$var wire 1 H# andab $end
$var wire 1 I# andcxor $end
$var wire 1 J# b $end
$var wire 1 K# carryin $end
$var wire 1 L# carryout $end
$var wire 1 M# sum $end
$var wire 1 N# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[26] $end
$scope module adder $end
$var wire 1 O# a $end
$var wire 1 P# andab $end
$var wire 1 Q# andcxor $end
$var wire 1 R# b $end
$var wire 1 S# carryin $end
$var wire 1 T# carryout $end
$var wire 1 U# sum $end
$var wire 1 V# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[27] $end
$scope module adder $end
$var wire 1 W# a $end
$var wire 1 X# andab $end
$var wire 1 Y# andcxor $end
$var wire 1 Z# b $end
$var wire 1 [# carryin $end
$var wire 1 \# carryout $end
$var wire 1 ]# sum $end
$var wire 1 ^# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[28] $end
$scope module adder $end
$var wire 1 _# a $end
$var wire 1 `# andab $end
$var wire 1 a# andcxor $end
$var wire 1 b# b $end
$var wire 1 c# carryin $end
$var wire 1 d# carryout $end
$var wire 1 e# sum $end
$var wire 1 f# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[29] $end
$scope module adder $end
$var wire 1 g# a $end
$var wire 1 h# andab $end
$var wire 1 i# andcxor $end
$var wire 1 j# b $end
$var wire 1 k# carryin $end
$var wire 1 l# carryout $end
$var wire 1 m# sum $end
$var wire 1 n# xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[30] $end
$scope module adder $end
$var wire 1 o# a $end
$var wire 1 p# andab $end
$var wire 1 q# andcxor $end
$var wire 1 r# b $end
$var wire 1 s# carryin $end
$var wire 1 t# carryout $end
$var wire 1 u# sum $end
$var wire 1 v# xorab $end
$upscope $end
$upscope $end
$scope module adder0 $end
$var wire 1 w# a $end
$var wire 1 x# andab $end
$var wire 1 y# andcxor $end
$var wire 1 z# b $end
$var wire 1 * carryin $end
$var wire 1 {# carryout $end
$var wire 1 |# sum $end
$var wire 1 }# xorab $end
$upscope $end
$scope module adder31 $end
$var wire 1 ~# a $end
$var wire 1 !$ andab $end
$var wire 1 "$ andcxor $end
$var wire 1 #$ b $end
$var wire 1 $$ carryin $end
$var wire 1 @ carryout $end
$var wire 1 %$ sum $end
$var wire 1 &$ xorab $end
$upscope $end
$upscope $end
$scope module adder $end
$var wire 32 '$ a [31:0] $end
$var wire 32 ($ b [31:0] $end
$var wire 1 )$ overflow $end
$var wire 1 *$ subtract $end
$var wire 32 +$ sum [31:0] $end
$var wire 31 ,$ cout [30:0] $end
$var wire 1 -$ carryout $end
$var wire 32 .$ bin [31:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk2[1] $end
$scope module adder $end
$var wire 1 /$ a $end
$var wire 1 0$ andab $end
$var wire 1 1$ andcxor $end
$var wire 1 2$ b $end
$var wire 1 3$ carryin $end
$var wire 1 4$ carryout $end
$var wire 1 5$ sum $end
$var wire 1 6$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[2] $end
$scope module adder $end
$var wire 1 7$ a $end
$var wire 1 8$ andab $end
$var wire 1 9$ andcxor $end
$var wire 1 :$ b $end
$var wire 1 ;$ carryin $end
$var wire 1 <$ carryout $end
$var wire 1 =$ sum $end
$var wire 1 >$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[3] $end
$scope module adder $end
$var wire 1 ?$ a $end
$var wire 1 @$ andab $end
$var wire 1 A$ andcxor $end
$var wire 1 B$ b $end
$var wire 1 C$ carryin $end
$var wire 1 D$ carryout $end
$var wire 1 E$ sum $end
$var wire 1 F$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[4] $end
$scope module adder $end
$var wire 1 G$ a $end
$var wire 1 H$ andab $end
$var wire 1 I$ andcxor $end
$var wire 1 J$ b $end
$var wire 1 K$ carryin $end
$var wire 1 L$ carryout $end
$var wire 1 M$ sum $end
$var wire 1 N$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[5] $end
$scope module adder $end
$var wire 1 O$ a $end
$var wire 1 P$ andab $end
$var wire 1 Q$ andcxor $end
$var wire 1 R$ b $end
$var wire 1 S$ carryin $end
$var wire 1 T$ carryout $end
$var wire 1 U$ sum $end
$var wire 1 V$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[6] $end
$scope module adder $end
$var wire 1 W$ a $end
$var wire 1 X$ andab $end
$var wire 1 Y$ andcxor $end
$var wire 1 Z$ b $end
$var wire 1 [$ carryin $end
$var wire 1 \$ carryout $end
$var wire 1 ]$ sum $end
$var wire 1 ^$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[7] $end
$scope module adder $end
$var wire 1 _$ a $end
$var wire 1 `$ andab $end
$var wire 1 a$ andcxor $end
$var wire 1 b$ b $end
$var wire 1 c$ carryin $end
$var wire 1 d$ carryout $end
$var wire 1 e$ sum $end
$var wire 1 f$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[8] $end
$scope module adder $end
$var wire 1 g$ a $end
$var wire 1 h$ andab $end
$var wire 1 i$ andcxor $end
$var wire 1 j$ b $end
$var wire 1 k$ carryin $end
$var wire 1 l$ carryout $end
$var wire 1 m$ sum $end
$var wire 1 n$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[9] $end
$scope module adder $end
$var wire 1 o$ a $end
$var wire 1 p$ andab $end
$var wire 1 q$ andcxor $end
$var wire 1 r$ b $end
$var wire 1 s$ carryin $end
$var wire 1 t$ carryout $end
$var wire 1 u$ sum $end
$var wire 1 v$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[10] $end
$scope module adder $end
$var wire 1 w$ a $end
$var wire 1 x$ andab $end
$var wire 1 y$ andcxor $end
$var wire 1 z$ b $end
$var wire 1 {$ carryin $end
$var wire 1 |$ carryout $end
$var wire 1 }$ sum $end
$var wire 1 ~$ xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[11] $end
$scope module adder $end
$var wire 1 !% a $end
$var wire 1 "% andab $end
$var wire 1 #% andcxor $end
$var wire 1 $% b $end
$var wire 1 %% carryin $end
$var wire 1 &% carryout $end
$var wire 1 '% sum $end
$var wire 1 (% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[12] $end
$scope module adder $end
$var wire 1 )% a $end
$var wire 1 *% andab $end
$var wire 1 +% andcxor $end
$var wire 1 ,% b $end
$var wire 1 -% carryin $end
$var wire 1 .% carryout $end
$var wire 1 /% sum $end
$var wire 1 0% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[13] $end
$scope module adder $end
$var wire 1 1% a $end
$var wire 1 2% andab $end
$var wire 1 3% andcxor $end
$var wire 1 4% b $end
$var wire 1 5% carryin $end
$var wire 1 6% carryout $end
$var wire 1 7% sum $end
$var wire 1 8% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[14] $end
$scope module adder $end
$var wire 1 9% a $end
$var wire 1 :% andab $end
$var wire 1 ;% andcxor $end
$var wire 1 <% b $end
$var wire 1 =% carryin $end
$var wire 1 >% carryout $end
$var wire 1 ?% sum $end
$var wire 1 @% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[15] $end
$scope module adder $end
$var wire 1 A% a $end
$var wire 1 B% andab $end
$var wire 1 C% andcxor $end
$var wire 1 D% b $end
$var wire 1 E% carryin $end
$var wire 1 F% carryout $end
$var wire 1 G% sum $end
$var wire 1 H% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[16] $end
$scope module adder $end
$var wire 1 I% a $end
$var wire 1 J% andab $end
$var wire 1 K% andcxor $end
$var wire 1 L% b $end
$var wire 1 M% carryin $end
$var wire 1 N% carryout $end
$var wire 1 O% sum $end
$var wire 1 P% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[17] $end
$scope module adder $end
$var wire 1 Q% a $end
$var wire 1 R% andab $end
$var wire 1 S% andcxor $end
$var wire 1 T% b $end
$var wire 1 U% carryin $end
$var wire 1 V% carryout $end
$var wire 1 W% sum $end
$var wire 1 X% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[18] $end
$scope module adder $end
$var wire 1 Y% a $end
$var wire 1 Z% andab $end
$var wire 1 [% andcxor $end
$var wire 1 \% b $end
$var wire 1 ]% carryin $end
$var wire 1 ^% carryout $end
$var wire 1 _% sum $end
$var wire 1 `% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[19] $end
$scope module adder $end
$var wire 1 a% a $end
$var wire 1 b% andab $end
$var wire 1 c% andcxor $end
$var wire 1 d% b $end
$var wire 1 e% carryin $end
$var wire 1 f% carryout $end
$var wire 1 g% sum $end
$var wire 1 h% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[20] $end
$scope module adder $end
$var wire 1 i% a $end
$var wire 1 j% andab $end
$var wire 1 k% andcxor $end
$var wire 1 l% b $end
$var wire 1 m% carryin $end
$var wire 1 n% carryout $end
$var wire 1 o% sum $end
$var wire 1 p% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[21] $end
$scope module adder $end
$var wire 1 q% a $end
$var wire 1 r% andab $end
$var wire 1 s% andcxor $end
$var wire 1 t% b $end
$var wire 1 u% carryin $end
$var wire 1 v% carryout $end
$var wire 1 w% sum $end
$var wire 1 x% xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[22] $end
$scope module adder $end
$var wire 1 y% a $end
$var wire 1 z% andab $end
$var wire 1 {% andcxor $end
$var wire 1 |% b $end
$var wire 1 }% carryin $end
$var wire 1 ~% carryout $end
$var wire 1 !& sum $end
$var wire 1 "& xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[23] $end
$scope module adder $end
$var wire 1 #& a $end
$var wire 1 $& andab $end
$var wire 1 %& andcxor $end
$var wire 1 && b $end
$var wire 1 '& carryin $end
$var wire 1 (& carryout $end
$var wire 1 )& sum $end
$var wire 1 *& xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[24] $end
$scope module adder $end
$var wire 1 +& a $end
$var wire 1 ,& andab $end
$var wire 1 -& andcxor $end
$var wire 1 .& b $end
$var wire 1 /& carryin $end
$var wire 1 0& carryout $end
$var wire 1 1& sum $end
$var wire 1 2& xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[25] $end
$scope module adder $end
$var wire 1 3& a $end
$var wire 1 4& andab $end
$var wire 1 5& andcxor $end
$var wire 1 6& b $end
$var wire 1 7& carryin $end
$var wire 1 8& carryout $end
$var wire 1 9& sum $end
$var wire 1 :& xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[26] $end
$scope module adder $end
$var wire 1 ;& a $end
$var wire 1 <& andab $end
$var wire 1 =& andcxor $end
$var wire 1 >& b $end
$var wire 1 ?& carryin $end
$var wire 1 @& carryout $end
$var wire 1 A& sum $end
$var wire 1 B& xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[27] $end
$scope module adder $end
$var wire 1 C& a $end
$var wire 1 D& andab $end
$var wire 1 E& andcxor $end
$var wire 1 F& b $end
$var wire 1 G& carryin $end
$var wire 1 H& carryout $end
$var wire 1 I& sum $end
$var wire 1 J& xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[28] $end
$scope module adder $end
$var wire 1 K& a $end
$var wire 1 L& andab $end
$var wire 1 M& andcxor $end
$var wire 1 N& b $end
$var wire 1 O& carryin $end
$var wire 1 P& carryout $end
$var wire 1 Q& sum $end
$var wire 1 R& xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[29] $end
$scope module adder $end
$var wire 1 S& a $end
$var wire 1 T& andab $end
$var wire 1 U& andcxor $end
$var wire 1 V& b $end
$var wire 1 W& carryin $end
$var wire 1 X& carryout $end
$var wire 1 Y& sum $end
$var wire 1 Z& xorab $end
$upscope $end
$upscope $end
$scope begin genblk2[30] $end
$scope module adder $end
$var wire 1 [& a $end
$var wire 1 \& andab $end
$var wire 1 ]& andcxor $end
$var wire 1 ^& b $end
$var wire 1 _& carryin $end
$var wire 1 `& carryout $end
$var wire 1 a& sum $end
$var wire 1 b& xorab $end
$upscope $end
$upscope $end
$scope module adder0 $end
$var wire 1 c& a $end
$var wire 1 d& andab $end
$var wire 1 e& andcxor $end
$var wire 1 f& b $end
$var wire 1 *$ carryin $end
$var wire 1 g& carryout $end
$var wire 1 h& sum $end
$var wire 1 i& xorab $end
$upscope $end
$scope module adder31 $end
$var wire 1 j& a $end
$var wire 1 k& andab $end
$var wire 1 l& andcxor $end
$var wire 1 m& b $end
$var wire 1 n& carryin $end
$var wire 1 -$ carryout $end
$var wire 1 o& sum $end
$var wire 1 p& xorab $end
$upscope $end
$upscope $end
$scope module decode $end
$var wire 32 q& instruction [31:0] $end
$var wire 14 r& immB [13:0] $end
$var wire 14 s& immA [13:0] $end
$var wire 3 t& funct [2:0] $end
$upscope $end
$scope module instMem $end
$var wire 32 u& PC [31:0] $end
$var wire 1 ! clk $end
$var wire 32 v& data_addr [31:0] $end
$var wire 32 w& data_in [31:0] $end
$var wire 32 x& data_out [31:0] $end
$var wire 32 y& instruction [31:0] $end
$var wire 1 z& wr_en $end
$upscope $end
$scope module novel_op $end
$var wire 1 ) address $end
$var wire 32 {& input0 [31:0] $end
$var wire 32 |& input1 [31:0] $end
$var wire 32 }& out [31:0] $end
$upscope $end
$scope module signExtendA $end
$var wire 14 ~& sign_in [13:0] $end
$var wire 32 !' sign_out [31:0] $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$upscope $end
$scope module signExtendB $end
$var wire 14 "' sign_in [13:0] $end
$var wire 32 #' sign_out [31:0] $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 #'
b11 "'
b10 !'
b10 ~&
b11 }&
b11 |&
bx {&
zz&
b10000000000000001000000000000011 y&
bx x&
bz w&
bz v&
b0 u&
b0 t&
b10 s&
b11 r&
b10000000000000001000000000000011 q&
xp&
xo&
xn&
xm&
xl&
xk&
0j&
xi&
xh&
xg&
xf&
xe&
xd&
0c&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
0[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
0S&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
0K&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
0C&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
0;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
03&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
0+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
0#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
0y%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
0q%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
0i%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
0a%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
0Y%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
0Q%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
0I%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
0A%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
09%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
01%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
0)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
0!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
0w$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
0o$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
0g$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
0_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
0W$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
0O$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
0G$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
0?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
07$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
0/$
bx .$
x-$
bx ,$
bx +$
0*$
x)$
b100 ($
b0 '$
x&$
x%$
x$$
x#$
x"$
x!$
0~#
x}#
x|#
x{#
xz#
xy#
xx#
0w#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
0o#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
0g#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
0_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
0W#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
0O#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
0G#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
0?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
07#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
0/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
0'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
0}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
0u"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
0m"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
0e"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
0]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
0U"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
0M"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
0E"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
0="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
05"
x4"
x3"
x2"
x1"
x0"
x/"
x."
0-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
0%"
x$"
x#"
x""
x!"
x~
x}
x|
0{
xz
xy
xx
xw
xv
xu
xt
0s
xr
xq
xp
xo
xn
xm
xl
0k
xj
xi
xh
xg
xf
xe
xd
0c
xb
xa
x`
x_
x^
x]
x\
0[
xZ
xY
xX
xW
xV
xU
xT
0S
xR
xQ
xP
xO
xN
xM
xL
0K
xJ
xI
xH
xG
xF
xE
xD
1C
b11 B
bx A
x@
bx ?
bx >
x=
b10 <
bx ;
bx :
19
b0 8
17
b0 6
15
b0 4
bx 3
bx 2
b11 1
b0 0
b10 /
b11 .
b10000000000000001000000000000011 -
b0 ,
bx +
0*
1)
b11 (
b10 '
1&
b111010001100101011100110111010000101111011000010110010001100100011010010110111001100111001011100111010001100101011110000111010000101110011010000110010101111000 %
0$
b1110011011011110110110101100101011101000110100001101001011011100110011100101110011101100110001101100100 #
0"
0!
$end
#5000
1"
#10000
0"
#15000
1"
#20000
0"
#25000
1"
#30000
1z#
1F
0N
0V
0^
0f
0n
0v
0~
0("
00"
08"
0@"
0H"
0P"
0X"
0`"
0h"
0p"
0x"
0"#
0*#
02#
0:#
0B#
0J#
0R#
0Z#
0b#
0j#
0r#
0#$
0f&
02$
1:$
0B$
0J$
0R$
0Z$
0b$
0j$
0r$
0z$
0$%
0,%
04%
0<%
0D%
0L%
0T%
0\%
0d%
0l%
0t%
0|%
0&&
0.&
06&
0>&
0F&
0N&
0V&
0^&
0m&
0"
0N"
0V"
0^"
0f"
0n"
0v"
0~"
0(#
00#
08#
0@#
0H#
0P#
0X#
0`#
0h#
0p#
0!$
0y#
b11 A
0L
0T
0\
0d
0l
0t
0|
0&"
0."
06"
0>"
0F"
0x#
00$
08$
0@$
0H$
0P$
0X$
0`$
0h$
0p$
0x$
0"%
0*%
02%
0:%
0B%
0J%
0R%
0Z%
0b%
0j%
0r%
0z%
0$&
0,&
04&
0<&
0D&
0L&
0T&
0\&
0d&
0k&
0e&
b100 .$
#35000
1"
#40000
0"
#45000
1"
#50000
0"
#55000
1"
#60000
0G
03$
0"
1}#
0J
1D
0R
0Z
0b
0j
0r
0z
0$"
0,"
04"
0<"
0D"
0L"
0T"
0\"
0d"
0l"
0t"
0|"
0&#
0.#
06#
0>#
0F#
0N#
0V#
0^#
0f#
0n#
0v#
0&$
0i&
06$
1>$
0F$
0N$
0V$
0^$
0f$
0n$
0v$
0~$
0(%
00%
08%
0@%
0H%
0P%
0X%
0`%
0h%
0p%
0x%
0"&
0*&
02&
0:&
0B&
0J&
0R&
0Z&
0b&
0p&
bx0 ?
0{#
bx0 ,$
0g&
#65000
1"
#70000
0"
#75000
1"
#80000
0"
#85000
1"
#90000
1O
0"
1|#
bx01 3
bx01 :
bx01 >
0I
0E
bx10 ?
1H
0M
0U
0]
0e
0m
0u
0}
0'"
0/"
07"
0?"
0G"
0O"
0W"
0_"
0g"
0o"
0w"
0!#
0)#
01#
09#
0A#
0I#
0Q#
0Y#
0a#
0i#
0q#
0"$
0h&
bx00 +
bx00 +$
05$
01$
0A$
0I$
0Q$
0Y$
0a$
0i$
0q$
0y$
0#%
0+%
03%
0;%
0C%
0K%
0S%
0[%
0c%
0k%
0s%
0{%
0%&
0-&
05&
0=&
0E&
0M&
0U&
0]&
0l&
#95000
1"
#100000
bx01 2
bx01 ;
bx01 {&
0"
1!
#105000
1"
#110000
0"
#115000
1"
#120000
0W
0_
0g
0o
0w
0!"
0)"
01"
09"
0A"
0I"
0Q"
0Y"
0a"
0i"
0q"
0y"
0##
0+#
03#
0;#
0C#
0K#
0S#
0[#
0c#
0k#
0s#
0$$
0;$
0K$
0S$
0[$
0c$
0k$
0s$
0{$
0%%
0-%
05%
0=%
0E%
0M%
0U%
0]%
0e%
0m%
0u%
0}%
0'&
0/&
07&
0?&
0G&
0O&
0W&
0_&
0n&
0"
bx101 3
bx101 :
bx101 >
1Q
0P
0X
0`
0h
0p
0x
0""
0*"
02"
0:"
0B"
0J"
0R"
0Z"
0b"
0j"
0r"
0z"
0$#
0,#
04#
0<#
0D#
0L#
0T#
0\#
0d#
0l#
b10 ?
0t#
0@
04$
0D$
0L$
0T$
0\$
0d$
0l$
0t$
0|$
0&%
0.%
06%
0>%
0F%
0N%
0V%
0^%
0f%
0n%
0v%
0~%
0(&
00&
08&
0@&
0H&
0P&
0X&
b0x00 ,$
0`&
0-$
#125000
1"
#130000
0"
#135000
1"
#140000
0"
#145000
1"
#150000
0"
0Y
0a
0i
0q
0y
0#"
0+"
03"
0;"
0C"
0K"
0S"
0["
0c"
0k"
0s"
0{"
0%#
0-#
05#
0=#
0E#
0M#
0U#
0]#
0e#
0m#
0u#
b101 3
b101 :
b101 >
0%$
0=
1=$
09$
0M$
0U$
0]$
0e$
0m$
0u$
0}$
0'%
0/%
07%
0?%
0G%
0O%
0W%
0_%
0g%
0o%
0w%
0!&
0)&
01&
09&
0A&
0I&
0Q&
0Y&
0a&
b0x100 +
b0x100 +$
0o&
0)$
#155000
1"
#160000
0"
#165000
1"
#170000
0"
#175000
1"
#180000
0C$
0"
b0 ,$
0<$
#185000
1"
#190000
0"
#195000
1"
#200000
0"
0!
#205000
1"
#210000
0"
b100 +
b100 +$
0E$
#215000
1"
#220000
0"
#225000
1"
#230000
0"
#235000
1"
#240000
0"
#245000
1"
#250000
0"
#255000
1"
#260000
0"
#265000
1"
#270000
0"
#275000
1"
#280000
0"
#285000
1"
#290000
0"
#295000
1"
#300000
05
0)
0C
1K
1S
1c
1w#
b100 0
b100 4
b100 t&
b101101 '
b101101 <
b101101 !'
b101101 /
b101101 s&
b101101 ~&
b101 1
b101 B
b101 }&
b0 (
b0 |&
b0 #'
b0 .
b0 r&
b0 "'
17$
b11000000000010110100000000000000 -
b11000000000010110100000000000000 q&
b11000000000010110100000000000000 y&
b101 2
b101 ;
b101 {&
b100 ,
b100 8
b100 '$
b100 u&
b100 6
0"
1!
0&
#305000
1"
#310000
0"
#315000
1"
#320000
0"
#325000
1"
#330000
1N
0F
0"
1J
0D
1R
1Z
1j
0}#
1x#
b101 A
0>$
18$
#335000
1"
#340000
0"
#345000
1"
#350000
0"
#355000
1"
#360000
0O
1G
b0 6
1C$
0"
0R
1L
0J
1I
0H
0Q
1M
1Y
1i
b101010 3
b101010 :
b101010 >
0|#
b1 ?
1{#
b0 +
b0 +$
0=$
b100 ,$
1<$
#365000
1"
#370000
0"
#375000
1"
#380000
0"
#385000
1"
#390000
b1000 6
1W
0"
b1000 +
b1000 +$
1E$
0M
b101 ?
1P
#395000
1"
#400000
0"
0!
#405000
1"
#410000
0"
#415000
1"
#420000
0"
b100010 3
b100010 :
b100010 >
0Y
1U
#425000
1"
#430000
0"
#435000
1"
#440000
0"
#445000
1"
#450000
1_
0"
b1101 ?
1X
#455000
1"
#460000
0"
#465000
1"
#470000
0"
#475000
1"
#480000
0"
b110010 3
b110010 :
b110010 >
1a
#485000
1"
#490000
0"
#495000
1"
#500000
xM"
xU"
x]"
xe"
xm"
xu"
x}"
x'#
x/#
x7#
x?#
xG#
xO#
xW#
x_#
xg#
xo#
x~#
xC
xK
xS
x[
xc
xk
xs
x{
x%"
x-"
x5"
x="
xE"
xw#
bx 0
bx 4
bx t&
bx '
bx <
bx !'
bx /
bx s&
bx ~&
bx (
bx |&
bx #'
bx .
bx r&
bx "'
07$
1?$
bx -
bx q&
bx y&
b1000 ,
b1000 8
b1000 '$
b1000 u&
b110010 1
b110010 B
b110010 }&
b110010 2
b110010 ;
b110010 {&
0"
1!
#505000
1"
#510000
0"
#515000
1"
#520000
0"
#525000
1"
#530000
1f
1^
0N
1F
0z#
0"
xT"
x\"
xd"
xl"
xt"
x|"
x&#
x.#
x6#
x>#
xF#
xN#
xV#
x^#
xf#
xn#
xv#
x&$
xJ
xR
xL
xZ
xb
xj
xr
xz
x$"
x,"
x4"
x<"
xD"
xL"
x}#
xx#
1>$
08$
1F$
b110010 A
#535000
1"
#540000
0"
#545000
1"
#550000
0"
#555000
1"
#560000
xW
xG
0C$
b100 6
0"
xd
x\
0L
xD
0x#
xS"
x["
xc"
xk"
xs"
x{"
x%#
x-#
x5#
x=#
xE#
xM#
xU#
x]#
xe#
xm#
xu#
x%$
xI
xE
xQ
xP
xY
xU
xa
x]
xi
xq
xy
x#"
x+"
x3"
x;"
xC"
xK"
bx 3
bx :
bx >
x|#
b1x0x ?
x{#
1=$
b0 ,$
0<$
b100 +
b100 +$
0E$
1A$
#565000
1"
#570000
0"
#575000
1"
#580000
0"
#585000
1"
#590000
b1100 6
xo
0W
0G
xO
x_
xg
1K$
0"
b1100 +
b1100 +$
1E$
0A$
xh
0P
0{#
xH
xX
b0xxx0x0 ?
x`
b1000 ,$
1D$
#595000
1"
#600000
0"
0!
#605000
1"
#610000
0"
#615000
1"
#620000
b11100 6
0K$
0"
xm
0U
0E
xM
xe
b11100 +
b11100 +$
1M$
b0 ,$
0D$
#625000
1"
#630000
0"
#635000
1"
#640000
0"
#645000
1"
#650000
b1100 6
xw
0_
xW
0"
b1100 +
b1100 +$
0M$
xp
0X
b0xxx0xx0 ?
xP
#655000
1"
#660000
0"
#665000
1"
#670000
0"
#675000
1"
#680000
0"
xu
0]
xU
#685000
1"
#690000
0"
#695000
1"
#700000
17$
bx 1
bx B
bx }&
bx 2
bx ;
bx {&
b1100 ,
b1100 8
b1100 '$
b1100 u&
0"
1!
#705000
1"
#710000
x!"
x_
0"
xx
b0xxxxxxx0 ?
xX
#715000
1"
#720000
0"
#725000
1"
#730000
x#$
xr#
xj#
xb#
xZ#
xR#
xJ#
xB#
x:#
x2#
x*#
x"#
xx"
xp"
xh"
x`"
xX"
xP"
xH"
x@"
x8"
x0"
x("
x~
xv
xn
xf
x^
xV
xN
xF
xz#
0"
bx A
0>$
18$
#735000
1"
#740000
0"
x}
x]
#745000
1"
#750000
0"
#755000
1"
#760000
b1000 6
1C$
0"
x!$
xp#
xh#
x`#
xX#
xP#
xH#
x@#
x8#
x0#
x(#
x~"
xv"
xn"
xf"
x^"
xV"
xN"
xF"
x>"
x6"
x."
x&"
x|
xt
xl
xT
xL
xx#
b1000 +
b1000 +$
0=$
b100 ,$
1<$
#765000
1"
#770000
x)"
0"
b0xxxxxxxx0 ?
x""
#775000
1"
#780000
0"
#785000
1"
#790000
b0 6
x$$
xs#
xk#
xc#
x[#
xS#
xK#
xC#
x;#
x3#
x+#
x##
xy"
xq"
xi"
xa"
xY"
xQ"
xI"
xA"
x9"
x1"
xG
0"
b0 +
b0 +$
0E$
1A$
x@
xt#
xl#
xd#
x\#
xT#
xL#
xD#
x<#
x4#
x,#
x$#
xz"
xr"
xj"
xb"
xZ"
xR"
xJ"
xB"
x:"
x2"
x*"
bx ?
x{#
#795000
1"
#800000
0"
x'"
0!
#805000
1"
#810000
0"
#815000
1"
#820000
1K$
0"
x"$
xq#
xi#
xa#
xY#
xQ#
xI#
xA#
x9#
x1#
x)#
x!#
xw"
xo"
xg"
x_"
xW"
xO"
xG"
x?"
x7"
x/"
xE
b1100 ,$
1D$
x=
#825000
1"
#830000
0"
#835000
1"
#840000
0"
#845000
1"
#850000
b10000 6
0"
b10000 +
b10000 +$
1M$
#855000
1"
#860000
0"
#865000
1"
#870000
0"
#875000
1"
#880000
0"
#885000
1"
#890000
0"
#895000
1"
#900000
07$
0?$
1G$
b10000 ,
b10000 8
b10000 '$
b10000 u&
0"
1!
#905000
1"
#910000
0"
#915000
1"
#920000
0"
#925000
1"
#930000
0"
1>$
08$
0F$
1N$
#935000
1"
#940000
0"
#945000
1"
#950000
0"
#955000
1"
#960000
0C$
b1100 6
0"
1=$
b1000 ,$
0<$
1E$
0A$
b1100 +
b1100 +$
0M$
1I$
#965000
1"
#970000
0"
#975000
1"
#980000
0"
#985000
1"
#990000
b100 6
0K$
1S$
0"
b100 +
b100 +$
0E$
0D$
b10000 ,$
1L$
#995000
1"
#1000000
0"
0!
#1005000
1"
#1010000
0"
#1015000
1"
#1020000
b110100 6
0"
1M$
0I$
b110100 +
b110100 +$
1U$
#1025000
1"
#1030000
0"
#1035000
1"
#1040000
0"
#1045000
1"
#1050000
0S$
0"
b0 ,$
0L$
#1055000
1"
#1060000
0"
#1065000
1"
#1070000
0"
#1075000
1"
#1080000
b10100 6
0"
b10100 +
b10100 +$
0U$
#1085000
1"
#1090000
0"
#1095000
1"
#1100000
17$
b10100 ,
b10100 8
b10100 '$
b10100 u&
0"
1!
#1105000
1"
#1110000
0"
#1115000
1"
#1120000
0"
#1125000
1"
#1130000
0"
0>$
18$
#1135000
1"
#1140000
0"
#1145000
1"
#1150000
0"
#1155000
1"
#1160000
b10000 6
1C$
0"
b10000 +
b10000 +$
0=$
b100 ,$
1<$
#1165000
1"
#1170000
0"
#1175000
1"
#1180000
0"
#1185000
1"
#1190000
b11000 6
0"
b11000 +
b11000 +$
1E$
#1195000
1"
#1200000
0"
0!
#1205000
1"
#1210000
0"
#1215000
1"
#1220000
0"
#1225000
1"
#1230000
0"
#1235000
1"
#1240000
0"
#1245000
1"
#1250000
0"
#1255000
1"
#1260000
0"
#1265000
1"
#1270000
0"
#1275000
1"
#1280000
0"
#1285000
1"
#1290000
0"
#1295000
1"
#1300000
07$
1?$
b11000 ,
b11000 8
b11000 '$
b11000 u&
0"
1!
#1305000
1"
#1310000
0"
#1315000
1"
#1320000
0"
#1325000
1"
#1330000
0"
1>$
08$
1F$
#1335000
1"
#1340000
0"
#1345000
1"
#1350000
0"
#1355000
1"
#1360000
0C$
b10100 6
0"
1=$
b0 ,$
0<$
b10100 +
b10100 +$
0E$
1A$
#1365000
1"
#1370000
0"
#1375000
1"
#1380000
0"
#1385000
1"
#1390000
b11100 6
1K$
0"
b11100 +
b11100 +$
1E$
0A$
b1000 ,$
1D$
#1395000
1"
#1400000
0"
0!
#1405000
1"
#1410000
0"
#1415000
1"
#1420000
b1100 6
0K$
0"
b1100 +
b1100 +$
0M$
1I$
b0 ,$
0D$
#1425000
1"
#1430000
0"
#1435000
1"
#1440000
0"
#1445000
1"
#1450000
b11100 6
1S$
0"
b11100 +
b11100 +$
1M$
0I$
b10000 ,$
1L$
#1455000
1"
#1460000
0"
#1465000
1"
#1470000
0"
#1475000
1"
#1480000
b111100 6
0S$
0"
b111100 +
b111100 +$
1U$
b0 ,$
0L$
#1485000
1"
#1490000
0"
#1495000
1"
#1500000
17$
1O$
b111100 ,
b111100 8
b111100 '$
b111100 u&
0"
1!
#1505000
1"
#1510000
b11100 6
0"
b11100 +
b11100 +$
0U$
#1515000
1"
#1520000
0"
#1525000
1"
#1530000
0"
0>$
18$
1V$
#1535000
1"
#1540000
0"
#1545000
1"
#1550000
0"
#1555000
1"
#1560000
1C$
b111000 6
0"
0=$
b100 ,$
1<$
b111000 +
b111000 +$
1U$
#1565000
1"
#1570000
0"
#1575000
1"
#1580000
0"
#1585000
1"
#1590000
b110000 6
0"
b110000 +
b110000 +$
0E$
1A$
#1595000
1"
#1600000
0"
0!
#1605000
1"
#1610000
0"
#1615000
1"
#1620000
1K$
0"
b1100 ,$
1D$
#1625000
1"
#1630000
0"
#1635000
1"
#1640000
0"
#1645000
1"
#1650000
b100000 6
0"
b100000 +
b100000 +$
0M$
1I$
#1655000
1"
#1660000
0"
#1665000
1"
#1670000
0"
#1675000
1"
#1680000
1S$
0"
b11100 ,$
1L$
#1685000
1"
#1690000
0"
#1695000
1"
#1700000
07$
0?$
0G$
b100000 ,
b100000 8
b100000 '$
b100000 u&
0"
1!
#1705000
1"
#1710000
b0 6
0"
b0 +
b0 +$
0U$
1Q$
#1715000
1"
#1720000
0"
#1725000
1"
#1730000
0"
1>$
08$
0F$
0N$
#1735000
1"
#1740000
1[$
0"
b111100 ,$
1T$
#1745000
1"
#1750000
0"
#1755000
1"
#1760000
0C$
b11100 6
0"
1=$
b111000 ,$
0<$
1E$
0A$
b11100 +
b11100 +$
1M$
0I$
#1765000
1"
#1770000
b1011100 6
0"
b1011100 +
b1011100 +$
1]$
#1775000
1"
#1780000
0"
#1785000
1"
#1790000
b1010100 6
0K$
0S$
0"
b1010100 +
b1010100 +$
0E$
0D$
b100000 ,$
0L$
#1795000
1"
#1800000
0"
0!
#1805000
1"
#1810000
0"
#1815000
1"
#1820000
b1100100 6
0"
0M$
b1100100 +
b1100100 +$
1U$
0Q$
#1825000
1"
#1830000
0"
#1835000
1"
#1840000
0"
#1845000
1"
#1850000
0[$
0"
b0 ,$
0T$
#1855000
1"
#1860000
0"
#1865000
1"
#1870000
0"
#1875000
1"
#1880000
b100100 6
0"
b100100 +
b100100 +$
0]$
#1885000
1"
#1890000
0"
#1895000
1"
#1900000
17$
b100100 ,
b100100 8
b100100 '$
b100100 u&
0"
1!
#1905000
1"
#1910000
0"
#1915000
1"
#1920000
0"
#1925000
1"
#1930000
0"
0>$
18$
#1935000
1"
#1940000
0"
#1945000
1"
#1950000
0"
#1955000
1"
#1960000
b100000 6
1C$
0"
b100000 +
b100000 +$
0=$
b100 ,$
1<$
#1965000
1"
#1970000
0"
#1975000
1"
#1980000
0"
#1985000
1"
#1990000
b101000 6
0"
b101000 +
b101000 +$
1E$
#1995000
1"
#2000000
0"
0!
#2005000
1"
#2010000
0"
#2015000
1"
#2020000
0"
#2025000
1"
#2030000
0"
#2035000
1"
#2040000
0"
#2045000
1"
#2050000
0"
#2055000
1"
#2060000
0"
#2065000
1"
#2070000
0"
#2075000
1"
#2080000
0"
#2085000
1"
#2090000
0"
#2095000
1"
#2100000
07$
1?$
b101000 ,
b101000 8
b101000 '$
b101000 u&
0"
1!
#2105000
1"
#2110000
0"
#2115000
1"
#2120000
0"
#2125000
1"
#2130000
0"
1>$
08$
1F$
#2135000
1"
#2140000
0"
#2145000
1"
#2150000
0"
#2155000
1"
#2160000
0C$
b100100 6
0"
1=$
b0 ,$
0<$
b100100 +
b100100 +$
0E$
1A$
#2165000
1"
#2170000
0"
#2175000
1"
#2180000
0"
#2185000
1"
#2190000
b101100 6
1K$
0"
b101100 +
b101100 +$
1E$
0A$
b1000 ,$
1D$
#2195000
1"
#2200000
0"
0!
#2205000
1"
#2210000
0"
#2215000
1"
#2220000
b111100 6
0K$
0"
b111100 +
b111100 +$
1M$
b0 ,$
0D$
#2225000
1"
#2230000
0"
#2235000
1"
#2240000
0"
#2245000
1"
#2250000
b101100 6
0"
b101100 +
b101100 +$
0M$
#2255000
1"
#2260000
0"
#2265000
1"
#2270000
0"
#2275000
1"
#2280000
0"
#2285000
1"
#2290000
0"
#2295000
1"
#2300000
17$
b101100 ,
b101100 8
b101100 '$
b101100 u&
0"
1!
#2305000
1"
#2310000
0"
#2315000
1"
#2320000
0"
#2325000
1"
#2330000
0"
0>$
18$
#2335000
1"
#2340000
0"
#2345000
1"
#2350000
0"
#2355000
1"
#2360000
b101000 6
1C$
0"
b101000 +
b101000 +$
0=$
b100 ,$
1<$
#2365000
1"
#2370000
0"
#2375000
1"
#2380000
0"
